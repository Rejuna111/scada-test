{"version":3,"sources":["components/FirstCard/FirstCard.module.scss","components/SecondCard/SecondCard.module.scss","components/ThirdCard/ThirdCard.module.scss","redux/reducers/mainCardReducer.js","components/common/SvgSprite.js","redux/reducers/firstCardReducer.js","components/FirstCard/FirstCard.js","redux/reducers/secondCardReducer.js","components/SecondCard/SecondCard.js","redux/reducers/thirdCardReducer.js","components/ThirdCard/ThirdCard.js","components/MainCard/MainCard.js","App.js","redux/reducers/rootReducer.js","redux/store.js","reportWebVitals.js","index.js","components/MainCard/MainCard.module.scss"],"names":["module","exports","TOGGLE_IS_ACTIVE","ADD_BLOCK","DELETE_BLOCK","UPDATE_POSITION_BLOCK","initialState","isActive","mainCard","name","blocks","id","mainCardReducer","state","action","type","block","filter","el","blockId","SvgPlus","className","width","height","viewBox","fill","xmlns","d","SvgArrow","stroke","strokeWidth","strokeLinecap","strokeLinejoin","SvgConnectionFirst","SvgConnectionSecond","SvgConnectionThird","FIRST_CARD_TOGGLE_IS_ACTIVE","FIRST_CARD_ADD_BLOCK","FIRST_CARD_DELETE_BLOCK","FIRST_CARD_UPDATE_POSITION_BLOCK","firstCard","firstCardReducer","connect","first","toggleIsActive","addBlock","deleteBlockAC","useState","plusVisible","setPlusVisible","connection","setConnection","vector","setVector","style","position","top","left","classes","firstCardActive","onMouseEnter","onMouseLeave","btn","onClick","droppableId","provided","droppableProps","ref","innerRef","map","index","draggableId","toString","draggableProps","dragHandleProps","blockActive","deleteBlock","placeholder","Math","random","SECOND_CARD_TOGGLE_IS_ACTIVE","SECOND_CARD_ADD_BLOCK","SECOND_CARD_DELETE_BLOCK","SECOND_CARD_UPDATE_POSITION_BLOCK","secondCard","secondCardReducer","second","secondCardActive","THIRD_CARD_TOGGLE_IS_ACTIVE","THIRD_CARD_ADD_BLOCK","THIRD_CARD_DELETE_BLOCK","THIRD_CARD_UPDATE_POSITION_BLOCK","thirdCard","third","right","thirdCardActive","main","cardWrapper","mainCardActive","Fragment","connectionFirst","connectionSecond","connectionThird","updatePositionBlockMain","updatePositionBlockSecond","updatePositionBlockFirst","updatePositionBlockThird","props","getBlocks","onDragEnd","result","source","destination","items","list","startIndex","endIndex","splice","removed","reorder","droppableSource","droppableDestination","sourceClone","Array","from","destClone","move","combineReducers","thirdCardReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.beb1035b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"firstCard\":\"FirstCard_firstCard__ugBkK\",\"firstCardActive\":\"FirstCard_firstCardActive__3Sosh\",\"btn\":\"FirstCard_btn__2sQFj\",\"block\":\"FirstCard_block__14xj8\",\"blockActive\":\"FirstCard_blockActive__2nIBE\",\"addBlock\":\"FirstCard_addBlock__3GGaE\",\"deleteBlock\":\"FirstCard_deleteBlock__duWPq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"secondCard\":\"SecondCard_secondCard__3X1Be\",\"secondCardActive\":\"SecondCard_secondCardActive__2B3Nu\",\"btn\":\"SecondCard_btn__rvhPC\",\"block\":\"SecondCard_block__3eAIb\",\"blockActive\":\"SecondCard_blockActive__DFxdv\",\"addBlock\":\"SecondCard_addBlock__1FZYx\",\"deleteBlock\":\"SecondCard_deleteBlock__J4T7D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thirdCard\":\"ThirdCard_thirdCard__1wzvm\",\"thirdCardActive\":\"ThirdCard_thirdCardActive__J_UrX\",\"btn\":\"ThirdCard_btn__2V3eb\",\"block\":\"ThirdCard_block__WtqDc\",\"blockActive\":\"ThirdCard_blockActive__3Z-HQ\",\"addBlock\":\"ThirdCard_addBlock__dSAKj\",\"deleteBlock\":\"ThirdCard_deleteBlock__DJex0\"};","const TOGGLE_IS_ACTIVE = 'TOGGLE_IS_ACTIVE'\nconst ADD_BLOCK = 'ADD_BLOCK'\nconst DELETE_BLOCK = 'DELETE_BLOCK'\nconst UPDATE_POSITION_BLOCK = 'UPDATE_POSITION_BLOCK'\n\nconst initialState = {\n  isActive: false,\n  mainCard: {\n    name: 'Main',\n    blocks: [{id: 1, name: 'Block1'}, {id: 2, name: 'Block2'}, {id: 3, name: 'Block3'}]\n  }\n}\n\nconst mainCardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_IS_ACTIVE:\n      return {\n        ...state,\n        isActive: action.isActive\n      }\n    case ADD_BLOCK:\n      return {\n        ...state,\n        mainCard: {...state.mainCard, blocks: [...state.mainCard.blocks, action.block]}\n      }\n    case DELETE_BLOCK:\n      return {\n        ...state,\n        mainCard: {...state.mainCard, blocks: state.mainCard.blocks.filter(el => el.id !== action.blockId)}\n      }\n    case UPDATE_POSITION_BLOCK:\n      return {\n        ...state,\n        mainCard: {...state.mainCard, blocks: [...action.blocks]}\n      }\n    default:\n      return state\n  }\n}\n\nexport const toggleIsActive = isActive => ({type: TOGGLE_IS_ACTIVE, isActive})\nexport const addBlock = block => ({type: ADD_BLOCK, block})\nexport const deleteBlockAC = blockId => ({type: DELETE_BLOCK, blockId})\nexport const updatePositionBlockMain = blocks => ({type: UPDATE_POSITION_BLOCK, blocks})\n\nexport default mainCardReducer","import React from 'react'\n// import classes from '../MainCard/MainCard.module.scss'\n\nexport const SvgPlus = () => {\n  return (\n    <svg className='plus' width=\"12\" height=\"12\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\" fill=\"#000000\"/>\n      <path d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\" fill=\"#000000\"/>\n    </svg>\n  )\n}\n\nexport const SvgArrow = () => {\n  return (\n    <svg className='arrow' width=\"13\" height=\"11\" viewBox=\"0 0 20 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M2 9.5L9.5 1.5L17 9.5\" stroke=\"#000000\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    </svg>\n  )\n}\n\nexport const SvgConnectionFirst = () => {\n  return (\n    <svg width=\"254\" height=\"40\" viewBox=\"0 0 254 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M253 0V12C253 16.4183 249.418 20 245 20H9C4.58172 20 1 23.5817 1 28V40\" stroke=\"black\" strokeWidth=\"2\"/>\n    </svg>\n  )\n}\n\nexport const SvgConnectionSecond = () => {\n  return (\n    <svg width=\"38\" height=\"40\" viewBox=\"0 0 38 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M37 0V12C37 16.4183 33.4183 20 29 20H9C4.58172 20 1 23.5817 1 28V40\" stroke=\"black\" strokeWidth=\"2\"/>\n    </svg>\n  )\n}\n\nexport const SvgConnectionThird = () => {\n  return (\n    <svg width=\"254\" height=\"40\" viewBox=\"0 0 254 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M1 0V12C1 16.4183 4.58172 20 9 20H245C249.418 20 253 23.5817 253 28V40\" stroke=\"black\" strokeWidth=\"2\"/>\n    </svg>\n  )\n}","const FIRST_CARD_TOGGLE_IS_ACTIVE = 'FIRST_CARD_TOGGLE_IS_ACTIVE'\nconst FIRST_CARD_ADD_BLOCK = 'FIRST_CARD_ADD_BLOCK'\nconst FIRST_CARD_DELETE_BLOCK = 'FIRST_CARD_DELETE_BLOCK'\nconst FIRST_CARD_UPDATE_POSITION_BLOCK = 'FIRST_CARD_UPDATE_POSITION_BLOCK'\n\nconst initialState = {\n  isActive: false,\n  firstCard: {\n    name: 'First',\n    blocks: [{id: 4, name: 'Block4'}, {id: 5, name: 'Block5'}, {id: 6, name: 'Block6'}]\n  }\n}\n\nconst firstCardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FIRST_CARD_TOGGLE_IS_ACTIVE:\n      return {\n        ...state,\n        isActive: action.isActive\n      }\n    case FIRST_CARD_ADD_BLOCK:\n      return {\n        ...state,\n        firstCard: {...state.firstCard, blocks: [...state.firstCard.blocks, action.block]}\n      }\n    case FIRST_CARD_DELETE_BLOCK:\n      return {\n        ...state,\n        firstCard: {...state.firstCard, blocks: state.firstCard.blocks.filter(el => el.id !== action.blockId)}\n      }\n    case FIRST_CARD_UPDATE_POSITION_BLOCK:\n      return {\n        ...state,\n        firstCard: {...state.firstCard, blocks: [...action.blocks]}\n      }\n    default:\n      return state\n  }\n}\n\nexport const toggleIsActive = isActive => ({type: FIRST_CARD_TOGGLE_IS_ACTIVE, isActive})\nexport const addBlock = block => ({type: FIRST_CARD_ADD_BLOCK, block})\nexport const deleteBlockAC = blockId => ({type: FIRST_CARD_DELETE_BLOCK, blockId})\nexport const updatePositionBlockFirst = blocks => ({type: FIRST_CARD_UPDATE_POSITION_BLOCK, blocks})\n\nexport default firstCardReducer","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\nimport classes from './FirstCard.module.scss'\nimport {Draggable, Droppable} from 'react-beautiful-dnd'\nimport {SvgArrow, SvgPlus} from '../common/SvgSprite'\nimport {addBlock, deleteBlockAC, toggleIsActive} from '../../redux/reducers/firstCardReducer'\n\nconst FirstCard = ({name, isActive, toggleIsActive, addBlock, blocks, deleteBlockAC}) => {\n\n  const [plusVisible, setPlusVisible] = useState(false)\n  const [connection, setConnection] = useState(false)\n  const [vector, setVector] = useState(true)\n\n  const onChangeConnection = () => {\n    setConnection(!connection)\n    setVector(!vector)\n  }\n\n  const setStateCard = () => toggleIsActive(!isActive)\n\n  const setBlock = () => addBlock({id: Math.random(), name: 'Block'})\n\n  return (\n    <div\n      style={{position: 'absolute', top: '40px', left: '-73px'}}\n      className={isActive ? `${classes.firstCard} + \" \" + ${classes.firstCardActive}` : classes.firstCard}\n      onMouseEnter={() => setPlusVisible(true)}\n      onMouseLeave={() => setPlusVisible(false)}\n    >\n      <button className={classes.btn} onClick={setStateCard} />\n      <h1>{name}</h1>\n      <Droppable droppableId=\"firstCard\">\n        {\n          (provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {\n                blocks.map((block, index) =>\n                  <Draggable key={block.id} draggableId={block.id.toString()} index={index}>\n                    {\n                      (provided) =>\n                        <div {...provided.draggableProps}\n                             ref={provided.innerRef}\n                             {...provided.dragHandleProps}\n                             className={isActive\n                               ? `${classes.block} + \" \" + ${classes.blockActive}`\n                               : classes.block}\n                        >\n                          <p>{block.name}</p>\n                          {\n                            isActive &&\n                            <div onClick={() => deleteBlockAC(block.id)} className={classes.deleteBlock}>\n                              <SvgPlus />\n                            </div>\n                          }\n                        </div>\n                    }\n\n                  </Draggable>\n                )\n              }\n              {provided.placeholder}\n            </div>\n          )\n        }\n      </Droppable>\n      {\n        isActive && <button onClick={setBlock} className={classes.addBlock}><SvgPlus /></button>\n      }\n      {\n        isActive ? null : plusVisible &&\n          <div className=\"circle\" onClick={onChangeConnection}>\n            {\n              vector\n                ? <SvgPlus />\n                : <SvgArrow />\n            }\n          </div>\n      }\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isActive: state.first.isActive,\n    name: state.first.firstCard.name,\n    blocks: state.first.firstCard.blocks\n  }\n}\n\nexport default connect(mapStateToProps, {toggleIsActive, addBlock, deleteBlockAC})(FirstCard)","const SECOND_CARD_TOGGLE_IS_ACTIVE = 'SECOND_CARD_TOGGLE_IS_ACTIVE'\nconst SECOND_CARD_ADD_BLOCK = 'SECOND_CARD_ADD_BLOCK'\nconst SECOND_CARD_DELETE_BLOCK = 'SECOND_CARD_DELETE_BLOCK'\nconst SECOND_CARD_UPDATE_POSITION_BLOCK = 'SECOND_CARD_UPDATE_POSITION_BLOCK'\n\nconst initialState = {\n  isActive: false,\n  secondCard: {\n    name: 'Second',\n    blocks: [{id: 7, name: 'Block7'}, {id: 8, name: 'Block8'}, {id: 9, name: 'Block9'}]\n  }\n}\n\nconst secondCardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SECOND_CARD_TOGGLE_IS_ACTIVE:\n      return {\n        ...state,\n        isActive: action.isActive\n      }\n    case SECOND_CARD_ADD_BLOCK:\n      return {\n        ...state,\n        secondCard: {...state.secondCard, blocks: [...state.secondCard.blocks, action.block]}\n      }\n    case SECOND_CARD_DELETE_BLOCK:\n      return {\n        ...state,\n        secondCard: {...state.secondCard, blocks: state.secondCard.blocks.filter(el => el.id !== action.blockId)}\n      }\n    case SECOND_CARD_UPDATE_POSITION_BLOCK:\n      return {\n        ...state,\n        secondCard: {...state.secondCard, blocks: [...action.blocks]}\n      }\n    default:\n      return state\n  }\n}\n\nexport const toggleIsActive = isActive => ({type: SECOND_CARD_TOGGLE_IS_ACTIVE, isActive})\nexport const addBlock = block => ({type: SECOND_CARD_ADD_BLOCK, block})\nexport const deleteBlockAC = blockId => ({type: SECOND_CARD_DELETE_BLOCK, blockId})\nexport const updatePositionBlockSecond = blocks => ({type: SECOND_CARD_UPDATE_POSITION_BLOCK, blocks})\n\nexport default secondCardReducer","import React, {useState} from 'react'\nimport classes from './SecondCard.module.scss'\nimport {Draggable, Droppable} from 'react-beautiful-dnd'\nimport {SvgArrow, SvgPlus} from '../common/SvgSprite'\nimport {addBlock, deleteBlockAC, toggleIsActive} from '../../redux/reducers/secondCardReducer'\nimport {connect} from 'react-redux'\n\nconst SecondCard = ({name, isActive, toggleIsActive, addBlock, blocks, deleteBlockAC}) => {\n\n  const [plusVisible, setPlusVisible] = useState(false)\n  const [connection, setConnection] = useState(false)\n  const [vector, setVector] = useState(true)\n\n  const onChangeConnection = () => {\n    setConnection(!connection)\n    setVector(!vector)\n  }\n\n  const setStateCard = () => toggleIsActive(!isActive)\n\n  const setBlock = () => addBlock({id: Math.random(), name: 'Block'})\n\n  return (\n    <div\n      style={{position: 'absolute', top: '40px', left: '-73px'}}\n      className={isActive ? `${classes.secondCard} + \" \" + ${classes.secondCardActive}` : classes.secondCard}\n      onMouseEnter={() => setPlusVisible(true)}\n      onMouseLeave={() => setPlusVisible(false)}\n    >\n      <button className={classes.btn} onClick={setStateCard} />\n      <h1>{name}</h1>\n      <Droppable droppableId=\"secondCard\">\n        {\n          (provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {\n                blocks.map((block, index) =>\n                  <Draggable key={block.id} draggableId={block.id.toString()} index={index}>\n                    {\n                      (provided) =>\n                        <div {...provided.draggableProps}\n                             ref={provided.innerRef}\n                             {...provided.dragHandleProps}\n                             className={isActive\n                               ? `${classes.block} + \" \" + ${classes.blockActive}`\n                               : classes.block}\n                        >\n                          <p>{block.name}</p>\n                          {\n                            isActive &&\n                            <div onClick={() => deleteBlockAC(block.id)} className={classes.deleteBlock}>\n                              <SvgPlus />\n                            </div>\n                          }\n                        </div>\n                    }\n\n                  </Draggable>\n                )\n              }\n              {provided.placeholder}\n            </div>\n          )\n        }\n      </Droppable>\n      {\n        isActive && <button onClick={setBlock} className={classes.addBlock}><SvgPlus /></button>\n      }\n      {\n        isActive ? null : plusVisible &&\n          <div className=\"circle\" onClick={onChangeConnection}>\n            {\n              vector\n                ? <SvgPlus />\n                : <SvgArrow />\n            }\n          </div>\n      }\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isActive: state.second.isActive,\n    name: state.second.secondCard.name,\n    blocks: state.second.secondCard.blocks\n  }\n}\n\nexport default connect(mapStateToProps, {toggleIsActive, addBlock, deleteBlockAC})(SecondCard)","const THIRD_CARD_TOGGLE_IS_ACTIVE = 'THIRD_CARD_TOGGLE_IS_ACTIVE'\nconst THIRD_CARD_ADD_BLOCK = 'THIRD_CARD_ADD_BLOCK'\nconst THIRD_CARD_DELETE_BLOCK = 'THIRD_CARD_DELETE_BLOCK'\nconst THIRD_CARD_UPDATE_POSITION_BLOCK = 'THIRD_CARD_UPDATE_POSITION_BLOCK'\n\nconst initialState = {\n  isActive: false,\n  thirdCard: {\n    name: 'Third',\n    blocks: [{id: 10, name: 'Block10'}, {id: 11, name: 'Block11'}, {id: 12, name: 'Block12'}]\n  }\n}\n\nconst mainCardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case THIRD_CARD_TOGGLE_IS_ACTIVE:\n      return {\n        ...state,\n        isActive: action.isActive\n      }\n    case THIRD_CARD_ADD_BLOCK:\n      return {\n        ...state,\n        thirdCard: {...state.thirdCard, blocks: [...state.thirdCard.blocks, action.block]}\n      }\n    case THIRD_CARD_DELETE_BLOCK:\n      return {\n        ...state,\n        thirdCard: {...state.thirdCard, blocks: state.thirdCard.blocks.filter(el => el.id !== action.blockId)}\n      }\n    case THIRD_CARD_UPDATE_POSITION_BLOCK:\n      return {\n        ...state,\n        thirdCard: {...state.thirdCard, blocks: [...action.blocks]}\n      }\n    default:\n      return state\n  }\n}\n\nexport const toggleIsActive = isActive => ({type: THIRD_CARD_TOGGLE_IS_ACTIVE, isActive})\nexport const addBlock = block => ({type: THIRD_CARD_ADD_BLOCK, block})\nexport const deleteBlockAC = blockId => ({type: THIRD_CARD_DELETE_BLOCK, blockId})\nexport const updatePositionBlockThird = blocks => ({type: THIRD_CARD_UPDATE_POSITION_BLOCK, blocks})\n\nexport default mainCardReducer","import React, {useState} from 'react'\nimport classes from './ThirdCard.module.scss'\nimport {Draggable, Droppable} from 'react-beautiful-dnd'\nimport {SvgArrow, SvgPlus} from '../common/SvgSprite'\nimport {connect} from 'react-redux'\nimport {addBlock, deleteBlockAC, toggleIsActive} from '../../redux/reducers/thirdCardReducer'\n\nconst ThirdCard = ({name, isActive, toggleIsActive, addBlock, blocks, deleteBlockAC}) => {\n\n  const [plusVisible, setPlusVisible] = useState(false)\n  const [connection, setConnection] = useState(false)\n  const [vector, setVector] = useState(true)\n\n  const onChangeConnection = () => {\n    setConnection(!connection)\n    setVector(!vector)\n  }\n\n  const setStateCard = () => toggleIsActive(!isActive)\n\n  const setBlock = () => addBlock({id: Math.random(), name: 'Block'})\n\n  return (\n    <div\n      style={{position: 'absolute', top: '40px', right: '-73px'}}\n      className={isActive ? `${classes.thirdCard} + \" \" + ${classes.thirdCardActive}` : classes.thirdCard}\n      onMouseEnter={() => setPlusVisible(true)}\n      onMouseLeave={() => setPlusVisible(false)}\n    >\n      <button className={classes.btn} onClick={setStateCard} />\n      <h1>{name}</h1>\n      <Droppable droppableId=\"thirdCard\">\n        {\n          (provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {\n                blocks.map((block, index) =>\n                  <Draggable key={block.id} draggableId={block.id.toString()} index={index}>\n                    {\n                      (provided) =>\n                        <div {...provided.draggableProps}\n                             ref={provided.innerRef}\n                             {...provided.dragHandleProps}\n                             className={isActive\n                               ? `${classes.block} + \" \" + ${classes.blockActive}`\n                               : classes.block}\n                        >\n                          <p>{block.name}</p>\n                          {\n                            isActive &&\n                            <div onClick={() => deleteBlockAC(block.id)} className={classes.deleteBlock}>\n                              <SvgPlus />\n                            </div>\n                          }\n                        </div>\n                    }\n\n                  </Draggable>\n                )\n              }\n              {provided.placeholder}\n            </div>\n          )\n        }\n      </Droppable>\n      {\n        isActive && <button onClick={setBlock} className={classes.addBlock}><SvgPlus /></button>\n      }\n      {\n        isActive ? null : plusVisible &&\n          <div className=\"circle\" onClick={onChangeConnection}>\n            {\n              vector\n                ? <SvgPlus />\n                : <SvgArrow />\n            }\n          </div>\n      }\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isActive: state.third.isActive,\n    name: state.third.thirdCard.name,\n    blocks: state.third.thirdCard.blocks\n  }\n}\n\nexport default connect(mapStateToProps, {toggleIsActive, addBlock, deleteBlockAC})(ThirdCard)","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\nimport classes from './MainCard.module.scss'\nimport {toggleIsActive, addBlock, deleteBlockAC} from '../../redux/reducers/mainCardReducer'\nimport {\n  SvgPlus,\n  SvgArrow,\n  SvgConnectionSecond,\n  SvgConnectionFirst,\n  SvgConnectionThird} from '../common/SvgSprite'\nimport {Droppable, Draggable} from 'react-beautiful-dnd'\nimport FirstCard from '../FirstCard/FirstCard'\nimport SecondCard from '../SecondCard/SecondCard'\nimport ThirdCard from '../ThirdCard/ThirdCard'\n\nconst MainCard = ({name, isActive, toggleIsActive, addBlock, blocks, deleteBlockAC}) => {\n\n  const [plusVisible, setPlusVisible] = useState(false)\n  const [connection, setConnection] = useState(false)\n  const [vector, setVector] = useState(true)\n\n  const onChangeConnection = () => {\n    setConnection(!connection)\n    setVector(!vector)\n  }\n\n  const setStateCard = () => toggleIsActive(!isActive)\n\n  const setBlock = () => addBlock({id: Math.random(), name: 'Block'})\n\n  return (\n    <div className={classes.cardWrapper}>\n        <div\n          className={isActive ? `${classes.mainCard} + \" \" + ${classes.mainCardActive}` : classes.mainCard}\n          onMouseEnter={() => setPlusVisible(true)}\n          onMouseLeave={() => setPlusVisible(false)}\n        >\n          <button className={classes.btn} onClick={setStateCard} />\n          <h1>{name}</h1>\n          <Droppable droppableId=\"mainCard\">\n            {\n              (provided) => (\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  {\n                    blocks.map((block, index) =>\n                      <Draggable key={block.id} draggableId={block.id.toString()} index={index}>\n                        {\n                          (provided) =>\n                            <div {...provided.draggableProps}\n                                 ref={provided.innerRef}\n                                 {...provided.dragHandleProps}\n                                 className={isActive\n                                   ? `${classes.block} + \" \" + ${classes.blockActive}`\n                                   : classes.block}\n                            >\n                              <p>{block.name}</p>\n                              {\n                                isActive &&\n                                <div onClick={() => deleteBlockAC(block.id)} className={classes.deleteBlock}>\n                                  <SvgPlus />\n                                </div>\n                              }\n                            </div>\n                        }\n\n                      </Draggable>\n                      )\n                  }\n                  {provided.placeholder}\n                </div>\n              )\n            }\n          </Droppable>\n          {\n            isActive && <button onClick={setBlock} className={classes.addBlock}><SvgPlus /></button>\n          }\n          {\n            isActive ? null : plusVisible &&\n              <div className={vector ? `circle + activeCircle`: \"circle\"} onClick={onChangeConnection}>\n                <SvgArrow />\n              </div>\n          }\n          {\n            connection &&\n            <React.Fragment>\n              <div className={classes.connectionFirst}>\n                <SvgConnectionFirst />\n                <FirstCard />\n              </div>\n              <div className={classes.connectionSecond}>\n                <SvgConnectionSecond />\n                <SecondCard />\n              </div>\n              <div className={classes.connectionThird}>\n                <SvgConnectionThird />\n                <ThirdCard />\n              </div>\n            </React.Fragment>\n          }\n        </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isActive: state.main.isActive,\n    name: state.main.mainCard.name,\n    blocks: state.main.mainCard.blocks\n  }\n}\n\nexport default connect(mapStateToProps, {toggleIsActive, addBlock, deleteBlockAC})(MainCard)","import React from 'react'\nimport {connect} from 'react-redux'\nimport MainCard from './components/MainCard/MainCard'\nimport {DragDropContext} from 'react-beautiful-dnd'\nimport {updatePositionBlockMain} from './redux/reducers/mainCardReducer'\nimport {updatePositionBlockFirst} from './redux/reducers/firstCardReducer'\nimport {updatePositionBlockSecond} from './redux/reducers/secondCardReducer'\nimport {updatePositionBlockThird} from './redux/reducers/thirdCardReducer'\n\nfunction App(props) {\n\n  const reorder = (list, startIndex, endIndex) => {\n    if (list === 'mainCard') {\n      const result = [...props.mainCard]\n      const [removed] = result.splice(startIndex, 1)\n      result.splice(endIndex, 0, removed)\n\n      return result\n    }\n\n    if (list === 'firstCard') {\n      const result = [...props.firstCard]\n      const [removed] = result.splice(startIndex, 1)\n      result.splice(endIndex, 0, removed)\n\n      return result\n    }\n\n    if (list === 'secondCard') {\n      const result = [...props.secondCard]\n      const [removed] = result.splice(startIndex, 1)\n      result.splice(endIndex, 0, removed)\n\n      return result\n    }\n\n    if (list === 'thirdCard') {\n      const result = [...props.thirdCard]\n      const [removed] = result.splice(startIndex, 1)\n      result.splice(endIndex, 0, removed)\n\n      return result\n    }\n  }\n\n  /**\n   * Moves an item from one list to another list.\n   */\n  const move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source)\n    const destClone = Array.from(destination)\n    const [removed] = sourceClone.splice(droppableSource.index, 1)\n\n    destClone.splice(droppableDestination.index, 0, removed)\n\n    const result = {}\n    result[droppableSource.droppableId] = sourceClone\n    result[droppableDestination.droppableId] = destClone\n\n    return result\n  }\n\n  const getBlocks = (id) => {\n    if (id === 'mainCard') return props.mainCard\n    if (id === 'firstCard') return props.firstCard\n    if (id === 'secondCard') return props.secondCard\n    if (id === 'thirdCard') return props.thirdCard\n  }\n\n\n  const onDragEnd = result => {\n    const {source, destination} = result\n\n    // dropped outside the list\n    if (!destination) return\n\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(\n        source.droppableId,\n        source.index,\n        destination.index\n      )\n      if (source.droppableId === 'mainCard') {\n        props.updatePositionBlockMain(items)\n      }\n      if (source.droppableId === 'firstCard') {\n        props.updatePositionBlockFirst(items)\n      }\n      if (source.droppableId === 'secondCard') {\n        props.updatePositionBlockSecond(items)\n      }\n      if (source.droppableId === 'thirdCard') {\n        props.updatePositionBlockThird(items)\n      }\n    } else {\n      const result = move(\n        getBlocks(source.droppableId),\n        getBlocks(destination.droppableId),\n        source,\n        destination\n      )\n      result.mainCard && props.updatePositionBlockMain(result.mainCard)\n      result.firstCard && props.updatePositionBlockFirst(result.firstCard)\n      result.secondCard && props.updatePositionBlockSecond(result.secondCard)\n      result.thirdCard && props.updatePositionBlockThird(result.thirdCard)\n    }\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"container\">\n        <MainCard />\n      </div>\n    </DragDropContext>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    mainCard: state.main.mainCard.blocks,\n    firstCard: state.first.firstCard.blocks,\n    secondCard: state.second.secondCard.blocks,\n    thirdCard: state.third.thirdCard.blocks\n  }\n}\n\nexport default connect(mapStateToProps, {\n  updatePositionBlockMain,\n  updatePositionBlockSecond,\n  updatePositionBlockFirst,\n  updatePositionBlockThird})(App)\n","import {combineReducers} from 'redux'\nimport mainCardReducer from './mainCardReducer'\nimport firstCardReducer from './firstCardReducer'\nimport secondCardReducer from './secondCardReducer'\nimport thirdCardReducer from './thirdCardReducer'\n\nexport default combineReducers({\n  main: mainCardReducer,\n  first: firstCardReducer,\n  second: secondCardReducer,\n  third: thirdCardReducer\n})\n","import { createStore, compose } from 'redux'\n\nimport rootReducer from './reducers/rootReducer'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(rootReducer, composeEnhancers())\n\nexport default store\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport './index.scss'\nimport App from './App'\nimport store from './redux/store'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardWrapper\":\"MainCard_cardWrapper__STAHh\",\"mainCard\":\"MainCard_mainCard__2Bmth\",\"mainCardActive\":\"MainCard_mainCardActive__3qIAB\",\"btn\":\"MainCard_btn__1LwMq\",\"block\":\"MainCard_block__2hnFb\",\"blockActive\":\"MainCard_blockActive__32u-_\",\"addBlock\":\"MainCard_addBlock__3kkgm\",\"deleteBlock\":\"MainCard_deleteBlock__2K9Cy\",\"circle\":\"MainCard_circle__1wBLB\",\"arrow\":\"MainCard_arrow__1YkpW\",\"plus\":\"MainCard_plus__YYyOG\",\"connectionFirst\":\"MainCard_connectionFirst__oDyJF\",\"connectionSecond\":\"MainCard_connectionSecond__3ibPa\",\"connectionThird\":\"MainCard_connectionThird__3m2CG\"};"],"sourceRoot":""}